var stanchion=angular.module("stanchion",["ui.router","appCommon","ui.bootstrap","blockUI","ngSanitize","xeditable","ngTable","templates","server","sysprops","healthcheck","spring-batch","config","logging","caching","spring-jms","camel-jms"]).config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/server")}]).run(["$rootScope","$log","editableOptions",function(t,e,n){t.$log=e,n.theme="bs3"}]);stanchion.config(["$provide","$httpProvider",function(t,e){t.factory("AppHttpInterceptor",["$q","alertService",function(t,e){return{request:function(e){return e||t.when(e)},requestError:function(e){return t.reject(e)},response:function(e){return e||t.when(e)},responseError:function(n){switch(n.status){case 400:e.add("danger","Bad request."),t.reject(n);break;case 403:e.add("danger","Forbidden request."),t.reject(n);break;case 404:e.add("danger","Resource not found."),t.reject(n);break;case 500:e.add("danger","Internal server error."),t.reject(n);break;case 401:e.add("danger","Unauthorized request."),t.reject(n);break;default:t.reject(n)}return t.reject(n)}}}]),e.interceptors.push("AppHttpInterceptor")}]),stanchion.directive("confirmButton",["$document","$parse",function(t,e){return{restrict:"A",scope:{confirmAction:"&confirmButton",placementCallback:"&"},link:function(e,n,a){var o=Math.floor(1e10*Math.random()),r=a.message||"Are you sure?",l=a.yes||"Yes",s=a.no||"No",c=a.title||"Confirm",i=a.classes||"",d=a.placement||"bottom";a.buttonId=o;var u='<div id="button-'+o+'" class="'+i+'"><p class="confirmbutton-msg">'+r+'</p><button class="confirmbutton-yes btn btn-info">'+l+'</button><button class="confirmbutton-no btn">'+s+"</button></div>";n.popover({content:u,html:!0,trigger:"manual",title:c,placement:angular.isDefined(a.placementCallback)?e.placementCallback():d}),n.bind("click",function(a){var r=!0;a.stopPropagation(),n.popover("show");var l=$("#button-"+o);l.closest(".popover").click(function(t){r&&t.stopPropagation()}),l.find(".confirmbutton-yes").click(function(t){r=!1,e.$apply(e.confirmAction)}),l.find(".confirmbutton-no").click(function(e){r=!1,t.off("click.confirmbutton."+o),n.popover("hide")}),t.on("click.confirmbutton."+o,":not(.popover, .popover *)",function(){t.off("click.confirmbutton."+o),n.popover("hide")})})}}}]),stanchion.directive("stanchionMenu",function(){return{restrict:"A",templateUrl:"template/navbar.tmpl.html",replace:!0}}),stanchion.controller("StanchionController",["$scope","$rootScope","CONTEXT_PATH",function(t,e,n){t.closeAlert=function(t){e.alerts.splice(t,1)},t.toggle=function(){t.isVisible=!t.isVisible},t.isVisible=!0,t.context_path=n,t.isActiveMenu=function(t){return t===$location.path()},t.currentYear=(new Date).getFullYear()}]),angular.module("caching",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("caching",{url:"/cache",templateUrl:"components/caching/caching.html",controller:"CacheController"})}]).controller("CacheController",["$scope","$http","NgTableParams","$filter","alertService",function(t,e,n,a,o){t.caches=[],t.con={name:"",size:""},t.cacheValues=[],o.closeAll(),t.tableParams=new n({page:1,count:100,sorting:{name:"asc"}},{counts:[],getData:function(e,n){var o=t.caches;o&&(o=n.filter()?a("filter")(o,n.filter()):o,o=n.sorting()?a("orderBy")(o,n.orderBy()):o,n.total(o.length),t.cacheValues=o.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.cacheValues))}}),t.reset=function(){t.caches=[],t.con={name:"",size:""},t.cacheValues=[]},t.getCacheList=function(){t.reset(),e.get("secure/manage/cache/list").success(function(e){null==e||""==e?o.clearAndAdd("info","Hazelcast is not configured"):(t.caches=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload()))}).error(function(){o.clearAndAdd("danger","Server error while retrieving Caches")})},t.clearCache=function(n){var a=encodeURI(n);e.post("secure/manage/cache/clear/"+a).success(function(e){t.getCacheList(),o.clearAndAdd("info",'Cache "'+n+'" is cleared')}).error(function(){o.clearAndAdd("danger",'Server error while clearing Cache: "'+n+'"')})},t.clearAllCaches=function(){e.post("secure/manage/cache/clearall").success(function(e){t.getCacheList(),o.clearAndAdd("info","All Caches cleared")}).error(function(){o.clearAndAdd("danger","Server error while clearing all Caches")})},t.getCacheList()}]);var appCommon=angular.module("appCommon",[]);appCommon.run(["$rootScope","$timeout",function(t,e){t.$on("$stateChangeSuccess",function(t,n,a,o,r){e(function(){$(window).scrollTop(0)},100)})}]),appCommon.directive("appHeader",function(){return{restrict:"A",link:function(t,e,n){t.href=n.href||"#",t.name=n.name},replace:!0,transclude:!0,templateUrl:"components/common/views/app-header.tmpl.html"}}),appCommon.directive("appNavbar",["$location",function(t){return{restrict:"A",transclude:!0,link:function(e,n,a){n.addClass("app-navbar"),e.isActive=function(e){return new RegExp(e).test(t.path())}},replace:!0,templateUrl:"components/common/views/app-navbar.tmpl.html"}}]),appCommon.factory("alertService",["$rootScope","$sce","$timeout",function(t,e,n){var a={};return t.alerts=[],t.closeAlert=function(t){a.closeAlert(t)},a.clearAndAdd=function(t,n){this.closeAll(),this.add(t,e.trustAsHtml(n))},a.add=function(e,a,o){var r=new Date,l=r.getTime(),o=parseInt(o)||null;t.alerts.push({type:e,msg:a,id:l}),o&&o>0&&n(function(){t.alerts=_.filter(t.alerts,function(t){return t.id!==l})},o)},a.closeAlert=function(e){t.alerts.splice(e,1)},a.closeAll=function(){t.alerts.length=0},a.length=function(){return t.alerts.length},a.hasAlerts=function(){return a.length()},a.rawAlerts=function(){return{get rawAlerts(){return t.alerts}}},a}]),angular.module("config",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("config",{url:"/config",templateUrl:"components/config-properties/config.html",controller:"ConfigController"})}]).controller("ConfigController",["$scope","$http","NgTableParams","$filter","alertService",function(t,e,n,a,o){t.configs=[],t.con={key:"",value:""},t.configValues=[],o.closeAll(),t.tableParams=new n({page:1,count:1e3,sorting:{key:"asc"}},{counts:[],getData:function(e,n){var o=t.configs;o&&(o=n.filter()?a("filter")(o,n.filter()):o,o=n.sorting()?a("orderBy")(o,n.orderBy()):o,n.total(o.length),t.configValues=o.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.configValues))}}),t.reset=function(){t.configs=[],t.con={key:"",value:""},t.configValues=[]},t.getConfigList=function(){t.reset(),e.get("secure/config/list").success(function(e){null==e||""==e?o.clearAndAdd("info","Database-driven configuration table is not defined"):(t.configs=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload()))}).error(function(){o.clearAndAdd("danger","Server error while retrieving Configurations")})},t.removeConfig=function(n){e.post("secure/config/remove/"+n).success(function(e){t.getConfigList(),o.clearAndAdd("info",'Configuration "'+n+'" is removed')}).error(function(){o.clearAndAdd("danger",'Server error while removing Configuration "'+n)})},t.addConfig=function(){if(null!=t.con.key&&void 0!=t.con.key&&null!=t.con.value&&void 0!=t.con.value){var n=encodeURI(t.con.key),a=encodeURIComponent(t.con.value);e.post("secure/config/add/"+n+"/"+a).success(function(e){o.clearAndAdd("info",'New Config added: "'+n+'"'),t.getConfigList()}).error(function(){o.clearAndAdd("danger",'Server error while adding Configuration "'+n)})}},t.updateConfig=function(t,n){e.post("secure/config/update/"+t+"/"+n).success(function(e){o.clearAndAdd("info",'Configuration "'+t+'" is updated')}).error(function(){o.clearAndAdd("danger",'Server error while updating Configuration "'+t)})},t.getConfigList()}]),angular.module("camel-jms",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("camel-jms",{url:"/camel-jms",templateUrl:"components/jms/camel-jms.html",controller:"CamelJmsController"})}]).controller("CamelJmsController",["$scope","$http","NgTableParams","$filter","alertService",function(t,e,n,a,o){t.camelJmsEndpoints=[],t.camelJmsEndpointValues=[],o.closeAll(),t.tableParams=new n({page:1,count:100,sorting:{camelContext:"asc",queueName:"asc"}},{counts:[],getData:function(e,n){var o=t.camelJmsEndpoints;o&&(o=n.filter()?a("filter")(o,n.filter()):o,o=n.sorting()?a("orderBy")(o,n.orderBy()):o,n.total(o.length),t.camelJmsEndpointValues=o.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.camelJmsEndpointValues))}}),t.reset=function(){t.camelJmsEndpoints=[],t.con={camelContext:"",queueName:""},t.camelJmsEndpointValues=[]},t.getCamelJmsEndpointList=function(){t.reset(),e.get("secure/manage/jms/camel/list").success(function(e){null==e||""==e?o.clearAndAdd("info","No Camel JMS Consumer found"):(t.camelJmsEndpoints=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload()))}).error(function(){o.clearAndAdd("danger","Server error while retrieving JMS consumers")})},t.updateConcurrentConsumerCount=function(n,a,r,l){e.post("secure/manage/jms/camel/"+encodeURIComponent(n)+"/"+encodeURIComponent(a)+"/concurrent/"+r).success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info",'Modified JMS Consumer "'+l+'" concurrent count to '+r)}).error(function(){o.clearAndAdd("danger","Server error while modifying JMS Consumer concurrent count: "+l)})},t.updateMaxConcurrentConsumerCount=function(n,a,r,l){e.post("secure/manage/jms/camel/"+encodeURIComponent(n)+"/"+encodeURIComponent(a)+"/maxconcurrent/"+r).success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info",'Modified JMS Consumer "'+l+'" max concurrent count to '+r)}).error(function(){o.clearAndAdd("danger","Server error while modifying JMS Consumer max concurrent count: "+l)})},t.stop=function(n,a,r){e.post("secure/manage/jms/camel/"+encodeURIComponent(n)+"/"+encodeURIComponent(a)+"/stop").success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info",'JMS Consumer "'+r+'" is stopped')}).error(function(){o.clearAndAdd("danger","Server error while stopping JMS Consumer: "+r)})},t.start=function(n,a,r){e.post("secure/manage/jms/camel/"+encodeURIComponent(n)+"/"+encodeURIComponent(a)+"/start").success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info",'JMS Consumer "'+r+'" is started')}).error(function(){o.clearAndAdd("danger","Server error while starting JMS Consumer: "+r)})},t.startAll=function(){e.post("secure/manage/jms/camel/startall").success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info","All JMS Consumers started")}).error(function(){o.clearAndAdd("danger","Server error while starting all JMS Consumer")})},t.stopAll=function(){e.post("secure/manage/jms/camel/stopall").success(function(e){t.getCamelJmsEndpointList(),o.clearAndAdd("info","All JMS Consumers stopped")}).error(function(){o.clearAndAdd("danger","Server error while stopping all JMS Consumer")})},t.getCamelJmsEndpointList()}]),angular.module("spring-jms",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("spring-jms",{url:"/spring-jms",templateUrl:"components/jms/spring-jms.html",controller:"SpringJmsController"})}]).controller("SpringJmsController",["$scope","$http","NgTableParams","$filter","alertService",function(t,e,n,a,o){t.springJmsEndpoints=[],t.springJmsEndpointValues=[],o.closeAll(),t.tableParams=new n({page:1,count:100,sorting:{queueName:"asc"}},{counts:[],getData:function(e,n){var o=t.springJmsEndpoints;o&&(o=n.filter()?a("filter")(o,n.filter()):o,o=n.sorting()?a("orderBy")(o,n.orderBy()):o,n.total(o.length),t.springJmsEndpointValues=o.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.springJmsEndpointValues))}}),t.reset=function(){t.springJmsEndpoints=[],t.con={camelContext:"",queueName:""},t.springJmsEndpointValues=[]},t.getSpringJmsEndpointList=function(){t.reset(),e.get("secure/manage/jms/spring/list").success(function(e){null==e||""==e?o.clearAndAdd("info","No Spring JMS Consumer found"):(t.springJmsEndpoints=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload()))}).error(function(){o.clearAndAdd("danger","Server error while retrieving JMS consumers")})},t.updateConcurrentConsumerCount=function(n,a,r){e.post("secure/manage/jms/spring/"+encodeURIComponent(n)+"/concurrent/"+a).success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info",'Modified JMS Consumer "'+r+'" concurrent count to '+a)}).error(function(){o.clearAndAdd("danger","Server error while modifying JMS Consumer concurrent count: "+r)})},t.updateMaxConcurrentConsumerCount=function(n,a,r){e.post("secure/manage/jms/spring/"+encodeURIComponent(n)+"/maxconcurrent/"+a).success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info",'Modified JMS Consumer "'+r+'" max concurrent count to '+a)}).error(function(){o.clearAndAdd("danger","Server error while modifying JMS Consumer max concurrent count: "+r)})},t.stop=function(n,a){e.post("secure/manage/jms/spring/"+encodeURIComponent(n)+"/stop").success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info",'JMS Consumer "'+a+'" is stopped')}).error(function(){o.clearAndAdd("danger","Server error while stopping JMS Consumer: "+a)})},t.start=function(n,a){e.post("secure/manage/jms/spring/"+encodeURIComponent(n)+"/start").success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info",'JMS Consumer "'+a+'" is started')}).error(function(){o.clearAndAdd("danger","Server error while starting JMS Consumer: "+a)})},t.startAll=function(){e.post("secure/manage/jms/spring/startall").success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info","All JMS Consumers started")}).error(function(){o.clearAndAdd("danger","Server error while starting all JMS Consumer")})},t.stopAll=function(){e.post("secure/manage/jms/spring/stopall").success(function(e){t.getSpringJmsEndpointList(),o.clearAndAdd("info","All JMS Consumers stopped")}).error(function(){o.clearAndAdd("danger","Server error while stopping all JMS Consumer")})},t.getSpringJmsEndpointList()}]),angular.module("logging",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("logging",{url:"/logging",templateUrl:"components/logging/logging.html",controller:"LoggingController"})}]).controller("LoggingController",["$scope","$http","alertService",function(t,e,n){n.closeAll(),t.cancel=function(){t.logger={name:"",level:"ALL"}},t.add=function(){e.post("secure/logging/update",t.logger).success(function(e){t.cancel(),t.getLoggerList()}).error(function(){n.clearAndAdd("danger","Could not update"+t.logger)})},t.update=function(e,n){t.logger.name=e,t.logger.level=n,t.add()},t.isAddDisabled=function(){return t.loggerForm.$invalid},t.getLoggerList=function(){e.get("secure/logging/list").success(function(e){null==e||""==e?n.clearAndAdd("info","Could not find loggers possibly because log4j is not configured"):t.loggers=e}).error(function(){n.clearAndAdd("danger","Could not retrieve Loggers")})},t.cancel(),t.getLoggerList()}]),angular.module("spring-batch",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("springBatch",{url:"/spring-batch",templateUrl:"components/spring-batch/jobs.html",controller:"SpringBatchJobController"})}]).controller("SpringBatchJobController",["$http","$scope","alertService","springBatchService",function(t,e,n,a){e.currentDate=new Date,e.allJobs="",e.jobExecutions="",e.jobExecutionById="",e.jobSubmissionParameter="",n.closeAll(),e.clearAll=function(){e.jobExecutions="",e.jobExecutionById="",e.jobSubmissionParameter=""},e.getAllJobs=function(){e.clearAll(),n.closeAll(),a.getAllJobs().then(function(t){""==t&&n.clearAndAdd("info","Could not find any Spring Batch job(s)"),e.allJobs=t},function(t){n.clearAndAdd("danger",t)})},e.getJobExecutions=function(a){e.clearAll(),n.closeAll(),!a.open&&t.get("secure/spring-batch/job/"+a.name+"/executions").success(function(t){e.jobExecutions=t}).error(function(){n.clearAndAdd("danger","Could not retrieve executions for job: "+a.name)})},e.refreshJobExecutions=function(a){e.clearAll(),n.closeAll(),t.get("secure/spring-batch/job/"+a+"/executions").success(function(t){e.jobExecutions=t}).error(function(){n.clearAndAdd("danger","Could not retrieve executions for job: "+a)})},e.getJobExecution=function(a){e.jobExecutionById="",n.closeAll(),!a.open&&t.get("secure/spring-batch/executions/"+a.executionId).success(function(t){e.jobExecutionById=t}).error(function(){n.clearAndAdd("danger","Could not retrieve Job execution for executionId: "+a.executionId)})},e.start=function(a,o){n.closeAll(),""==o?n.clearAndAdd("warning","Enter comma or newline separated name=value pair(s) for job submission"):t.get("secure/spring-batch/job/"+a+"/"+o+"/start").success(function(t){""==t?(e.refreshJobExecutions(a),n.clearAndAdd("success",a+" Job submitted")):n.clearAndAdd("danger",t)}).error(function(){n.clearAndAdd("danger","Could not start job: "+a)})},e.stop=function(a){n.closeAll(),t.get("secure/spring-batch/executions/"+a+"/stop").success(function(t){""==t?(e.refreshJobExecutions(jobName),n.clearAndAdd("success","Execution Id: "+a+" stopped")):n.clearAndAdd("danger",t)}).error(function(){n.clearAndAdd("danger","Could not stop job with executionId: "+a)})},e.restart=function(a){n.closeAll(),t.get("secure/spring-batch/executions/"+a+"/restart").success(function(t){""==t?(e.refreshJobExecutions(jobName),n.clearAndAdd("success","Execution Id: "+a+" restarted")):n.clearAndAdd("danger",t)}).error(function(){n.clearAndAdd("danger","Could not restart job with executionId: "+a)})},e.abandon=function(a){n.closeAll(),t.get("secure/spring-batch/executions/"+a+"/abandon").success(function(t){""==t?(e.refreshJobExecutions(jobName),n.clearAndAdd("success","Execution Id: "+a+" abandoned")):n.clearAndAdd("danger",t)}).error(function(){n.clearAndAdd("danger","Could not abandon job with executionId: "+a)})},e.getAllJobs()}]).factory("springBatchService",["$http","$q","alertService",function(t,e,n){var a={},o=e.defer();return a.getAllJobs=function(){return n.closeAll(),t.get("secure/spring-batch/list").success(function(t){o.resolve(t)}).error(function(){o.reject("Error retrieving spring-batch jobs")}),o.promise},a}]),angular.module("templates",[]).run(["$templateCache",function(t){t.put("components/caching/caching.html",'<div class="well container" ng-show="caches">\n\n\t<div id="cache-panel" class="panel details-view-wrapper">\n\t\t<h1 class="panel-header"><strong>Manage Cache</strong></h1>\n\t\t<div class="row">\n\t\t\t<div class="col-md-5">\n\t\t\t\t<div id="cacheFilter" class="input-group">\n\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\n\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\n\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t\t<div id="cache-content-panel" class="panel-content clearfix">\n\t\n\t\t\t<button class="btn btn-default btn-sm" ng-click="clearAllCaches()">\n\t\t\t\t<span>Clear All Caches</span>\n\t\t\t</button>\n\t\n\t\t\t<div class="table-view-port" ng-show="caches">\n\t\t\t\t<table id="cache-table" ng-table="tableParams" \n\t\t\t\t\t\tclass="table table-hover table-bordered table-condensed">\n\t\t\t\t\t<tr ng-repeat="c in cacheValues  | filter:search">\n\t\t\t\t\t\t<td data-title="\'Cache Name\'" sortable="\'name\'" width="50%" popover-title="Configuration" popover-placement="bottom" popover-trigger="mouseenter" popover="{{c.config}}" popover-append-to-body="true"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.name}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Cache Size\'" sortable="\'size\'" width="10%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.size}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Action\'" width="10%">\n\t\t\t\t\t\t\t<button class="btn btn-default btn-sm" ng-click="clearCache(c.name)">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-remove">Clear</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\t\n\t\t\t\t</table>\n\t\t\t</div>\n\t\n\t\t</div>\n\t</div>\n</div>\n'),t.put("components/config-properties/config.html",'<div class="well container" ng-show="configValues">\n\t<div id="config-panel" class="panel details-view-wrapper">\n\t\t<h1 class="panel-header"><strong>Configuration Values</strong></h1>\n\n\t\t<div class="row">\n\t\t\t<form name="configForm" ng-submit="addConfig()">\n\t\t\t\t<div class="col-md-2">\n\t\t\t\t\t<input id="configKey" name="key" type="text" ng-model="con.key"\n\t\t\t\t\t\trequired class="form-control"\n\t\t\t\t\t\tplaceholder="Enter a new Config Key"\n\t\t\t\t\t\ttooltip="Enter a Config Key" tooltip-placement="top" size="20">\n\t\t\t\t</div>\n\t\t\t\t<div class="col-md-3">\n\t\t\t\t\t<input id="configValue" name="value" type="text"\n\t\t\t\t\t\tng-model="con.value" required class="form-control"\n\t\t\t\t\t\tplaceholder="Enter a new Config Value"\n\t\t\t\t\t\ttooltip="Enter a Config Value" tooltip-placement="top" size="20">\n\t\t\t\t</div>\n\t\t\t\t<div class="col-md-2">\n\t\t\t\t\t<button class="btn btn-sm btn-primary" ng-disabled="configForm.$invalid">\n\t\t\t\t\t\t<span>Add</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<div class="col-md-5">\n\t\t\t\t<div id="configFilter" class="input-group pull-right">\n\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\n\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\n\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div id="config-content-panel" class="panel-content clearfix">\n\t\t\t<div class="table-view-port">\n\n\t\t\t\t<table id="config-table" rl-table="tableParams" \n\t\t\t\t\tclass="table table-hover table-bordered table-condensed">\n\t\t\t\t\t<tr ng-repeat="c in configValues  | filter:search">\n\t\t\t\t\t\t<td data-title="\'Config Key\'" sortable="\'key\'" width="30%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.key}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Config Value\'" sortable="\'value\'"><span\n\t\t\t\t\t\t\tclass="pull-left"><a href="#" editable-text="c.value" tooltip="Click to edit in-place"\n\t\t\t\t\t\t\t\ttooltip-placement="right" onaftersave="updateConfig(c.key, c.value)" e-required>{{\n\t\t\t\t\t\t\t\t\tc.value || \'empty\' }}</a></span></td>\n\t\t\t\t\t\t<td data-title="\'Action\'" width="8%">\n\t\t\t\t\t\t\t<button class="btn btn-xs btn-danger"\n\t\t\t\t\t\t\t\ttype="button" confirm-button="removeConfig(c.key)" message="Do you want to delete the config \'{{c.key}}\' ?">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-remove"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>'),t.put("components/jms/camel-jms.html",'<div class="well container" ng-show="camelJmsEndpoints">\n\n\t<div id="camel-jms-panel" class="panel details-view-wrapper">\n\t\t<h1 class="panel-header"><strong>Manage Camel JMS Consumer</strong></h1>\n\t\t<div class="row">\n\t\t\t<div class="col-md-5">\n\t\t\t\t<div id="jmsFilter" class="input-group">\n\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\n\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\n\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t\t<div id="camel-jms-content-panel" class="panel-content clearfix">\n\t\t\t\n\t\t\t<button class="btn btn-default btn-sm" ng-click="startAll()">\n\t\t\t\t<span class="glyphicon glyphicon-play">Start All</span>\n\t\t\t</button>\n\t\t\t\n\t\t\t<button class="btn btn-default btn-sm" ng-click="stopAll()">\n\t\t\t\t<span class="glyphicon glyphicon-stop">Stop All</span>\n\t\t\t</button>\n\t\n\t\t\t<div class="table-view-port" ng-show="camelJmsEndpoints">\n\t\t\t\t<table id="camel-jms-table" ng-table="tableParams" \n\t\t\t\t\t\tclass="table table-hover table-bordered table-condensed">\n\t\t\t\t\t<tr ng-repeat="c in camelJmsEndpointValues  | filter:search">\n\t\t\t\t\t\t<td data-title="\'Camel Context\'" sortable="\'camelContext\'" width="15%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.camelContext}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Route\'" width="15%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.routeName}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Queue Name\'" sortable="\'queueName\'" width="30%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.queueName}}</span></td>\n\t\t\t\t\t\t<td data-title="\'State\'" width="10%" ng-style="c.state === \'Started\' && {\'background-color\': \'lightgreen\'} || c.state === \'Stopped\' && {\'background-color\': \'red\'}"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.state}}</span></td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<td data-title="\'Concurrent Consumers\'" width="10%"><span\n\t\t\t\t\t\t\tclass="pull-left"><a href="#" editable-text="c.concurrentConsumers" tooltip="Click to edit in-place"\n\t\t\t\t\t\t\t\ttooltip-placement="right" onaftersave="updateConcurrentConsumerCount(c.camelContext, c.cleanName, c.concurrentConsumers, c.queueName)" e-required>{{c.concurrentConsumers}}</a></span></td>\n\t\t\t\t\t\t<td data-title="\'Max Concurrent Consumers\'" width="10%"><span\n\t\t\t\t\t\t\tclass="pull-left"><a href="#" editable-text="c.maxConcurrentConsumers" tooltip="Click to edit in-place"\n\t\t\t\t\t\t\t\ttooltip-placement="right" onaftersave="updateMaxConcurrentConsumerCount(c.camelContext, c.cleanName, c.maxConcurrentConsumers, c.queueName)" e-required>{{c.maxConcurrentConsumers}}</a></span></td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<td data-title="\'Action\'" width="10%">\n\t\t\t\t\t\t\t<button ng-if="c.state == \'Started\'" class="btn btn-default btn-sm" ng-click="stop(c.camelContext, c.cleanName, c.queueName)">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-stop">Stop</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button ng-if="c.state == \'Stopped\'"  class="btn btn-default btn-sm" ng-click="start(c.camelContext, c.cleanName, c.queueName)">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-play">Start</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\t\n\t\t\t\t</table>\n\t\t\t</div>\n\t\n\t\t</div>\n\t</div>\n</div>\n'),t.put("components/jms/spring-jms.html",'<div class="well container" ng-show="springJmsEndpoints">\n\n\t<div id="spring-jms-panel" class="panel details-view-wrapper">\n\t\t<h1 class="panel-header"><strong>Manage Spring JMS Consumer</strong></h1>\n\t\t<div class="row">\n\t\t\t<div class="col-md-5">\n\t\t\t\t<div id="jmsFilter" class="input-group">\n\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\n\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\n\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t\t<div id="spring-jms-content-panel" class="panel-content clearfix">\n\t\t\t\n\t\t\t<button class="btn btn-default btn-sm" ng-click="startAll()">\n\t\t\t\t<span class="glyphicon glyphicon-play">Start All</span>\n\t\t\t</button>\n\t\t\t\n\t\t\t<button class="btn btn-default btn-sm" ng-click="stopAll()">\n\t\t\t\t<span class="glyphicon glyphicon-stop">Stop All</span>\n\t\t\t</button>\n\t\n\t\t\t<div class="table-view-port" ng-show="springJmsEndpoints">\n\t\t\t\t<table id="spring-jms-table" ng-table="tableParams" \n\t\t\t\t\t\tclass="table table-hover table-bordered table-condensed">\n\t\t\t\t\t<tr ng-repeat="c in springJmsEndpointValues  | filter:search">\n\t\t\t\t\t\t<td data-title="\'Listener bean\'" sortable="\'listenerBean\'" width="15%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.name}}</span></td>\n\t\t\t\t\t\t<td data-title="\'Queue Name\'" sortable="\'queueName\'" width="30%"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.queueName}}</span></td>\n\t\t\t\t\t\t<td data-title="\'State\'" width="10%" ng-style="c.state === \'Started\' && {\'background-color\': \'lightgreen\'} || c.state === \'Stopped\' && {\'background-color\': \'red\'}"><span\n\t\t\t\t\t\t\tclass="pull-left">{{c.state}}</span></td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<td data-title="\'Concurrent Consumers\'" width="10%"><span\n\t\t\t\t\t\t\tclass="pull-left"><a href="#" editable-text="c.concurrentConsumers" tooltip="Click to edit in-place"\n\t\t\t\t\t\t\t\ttooltip-placement="right" onaftersave="updateConcurrentConsumerCount(c.name, c.concurrentConsumers, c.queueName)" e-required>{{c.concurrentConsumers}}</a></span></td>\n\t\t\t\t\t\t<td data-title="\'Max Concurrent Consumers\'" width="10%"><span\n\t\t\t\t\t\t\tclass="pull-left"><a href="#" editable-text="c.maxConcurrentConsumers" tooltip="Click to edit in-place"\n\t\t\t\t\t\t\t\ttooltip-placement="right" onaftersave="updateMaxConcurrentConsumerCount(c.name, c.maxConcurrentConsumers, c.queueName)" e-required>{{c.maxConcurrentConsumers}}</a></span></td>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<td data-title="\'Action\'" width="10%">\n\t\t\t\t\t\t\t<button ng-if="c.state == \'Started\'" class="btn btn-default btn-sm" ng-click="stop(c.name, c.queueName)">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-stop">Stop</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button ng-if="c.state == \'Stopped\'"  class="btn btn-default btn-sm" ng-click="start(c.name, c.queueName)">\n\t\t\t\t\t\t\t\t<span class="glyphicon glyphicon-play">Start</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\t\n\t\t\t\t</table>\n\t\t\t</div>\n\t\n\t\t</div>\n\t</div>\n</div>\n'),
t.put("components/logging/logging.html",'<div class="well container" ng-show="loggers">\r\n\t<div id="logging-panel" class="panel details-view-wrapper">\r\n\t  \t<h1 class="panel-header"><strong>Manage Log Levels</strong></h1>\r\n\t\t\t\r\n\t\t<form name="loggerForm">\r\n             <div id="logging_input_group" class="col-md-8 input-group">\r\n \t                <input class="form-control" type="text" ng-model="logger.name" placeholder="Add/update Category"/>\r\n \t                <div class="input-group-btn" dropdown>\r\n  \t            \t<button id="split-button" type="button" class="btn btn-small" ng-class="logger.level === \'TRACE\' && \'btn-warning\' || logger.level === \'INFO\' && \'btn-info\' || logger.level === \'WARN\' && \'btn-warning\' || logger.level === \'ERROR\' && \'btn-danger\' || logger.level === \'FATAL\' && \'btn-danger\'">{{logger.level}}</button>\r\n\t\t\t\t    <button type="button" class="btn btn-small" ng-class="logger.level === \'TRACE\' && \'btn-warning\' || logger.level === \'INFO\' && \'btn-info\' || logger.level === \'WARN\' && \'btn-warning\' || logger.level === \'ERROR\' && \'btn-danger\' || logger.level === \'FATAL\' && \'btn-danger\'" dropdown-toggle>\r\n\t\t\t\t    \t<span class="caret"></span>\r\n\t\t\t\t    </button>\r\n\t\t\t\t    <ul class="dropdown-menu" role="menu"  aria-labelledby="split-button">\r\n\t\t\t\t\t\t<li role="menuitem"><a ng-click="update(logger.name, \'OFF\')" class="btn btn-small">OFF</a></li>\r\n\t\t\t\t\t\t<li class="divider"></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'ALL\')"  class="btn btn-small">ALL</a></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'TRACE\')" class="btn btn-warning btn-small">TRACE</a></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'DEBUG\')"  class="btn btn-small">DEBUG</a></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'INFO\')"  class="btn btn-info btn-small">INFO</a></li>\r\n\t\t\t\t\t\t<li class="divider"></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'WARN\')" class="btn btn-warning btn-small">WARN</a></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'ERROR\')" class="btn btn-danger btn-small">ERROR</a></li>\r\n\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'FATAL\')" class="btn btn-danger btn-small">FATAL</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t<div class="col-md-10">\r\n\t\t\t\t\t<div id="loggingFilter" class="input-group pull-right">\r\n\t\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\r\n\t\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\r\n\t\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t\r\n\t\t<div id="support-log-table" class="table-view-port">\r\n\t\t\t<table id="logging-table" class="table table-hover table-bordered table-condensed">\r\n\t\t   \t\t<thead>\r\n\t\t     \t\t<tr>\r\n\t\t           \t\t<th>Category</th>\r\n\t\t          \t\t<th>Level</th>\r\n\t\t     \t\t</tr>\r\n\t\t \t\t</thead>\t\r\n\t\t        <tbody>\r\n\t\t        \t<tr ng-repeat="logger in loggers | filter:search">\r\n\t\t  \t          \t<td data-title="\'Category\'" sortable="\'name\'" >{{logger.name}}</td>\r\n\t\t \t            <td>\r\n\t\t  \t            \t<div class="btn-group" dropdown>\r\n\t\t\t  \t            \t<button id="split-button" type="button" class="btn btn-small" ng-class="logger.level === \'TRACE\' && \'btn-warning\' || logger.level === \'INFO\' && \'btn-info\' || logger.level === \'WARN\' && \'btn-warning\' || logger.level === \'ERROR\' && \'btn-danger\' || logger.level === \'FATAL\' && \'btn-danger\'">{{logger.level}}</button>\r\n\t\t\t\t\t\t\t    <button type="button" class="btn btn-small" ng-class="logger.level === \'TRACE\' && \'btn-warning\' || logger.level === \'INFO\' && \'btn-info\' || logger.level === \'WARN\' && \'btn-warning\' || logger.level === \'ERROR\' && \'btn-danger\' || logger.level === \'FATAL\' && \'btn-danger\'" dropdown-toggle>\r\n\t\t\t\t\t\t\t    \t<span class="caret"></span>\r\n\t\t\t\t\t\t\t    </button>\r\n\t\t\t\t\t\t\t    <ul class="dropdown-menu" role="menu"  aria-labelledby="split-button">\r\n\t\t\t\t\t\t\t\t\t<li role="menuitem"><a ng-click="update(logger.name, \'OFF\')" class="btn btn-small">OFF</a></li>\r\n\t\t\t\t\t\t\t\t\t<li class="divider"></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'ALL\')"  class="btn btn-small">ALL</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'TRACE\')" class="btn btn-warning btn-small">TRACE</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'DEBUG\')"  class="btn btn-small">DEBUG</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'INFO\')"  class="btn btn-info btn-small">INFO</a></li>\r\n\t\t\t\t\t\t\t\t\t<li class="divider"></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'WARN\')" class="btn btn-warning btn-small">WARN</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'ERROR\')" class="btn btn-danger btn-small">ERROR</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a ng-click="update(logger.name, \'FATAL\')" class="btn btn-danger btn-small">FATAL</a></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t           \t\t</td>\r\n\t\t           \t</tr>\r\n\t\t        </tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n</div>'),t.put("components/spring-batch/jobs.html",'\n\t<accordion id="jobAccordian" close-others="true">\n\t    <accordion-group ng-repeat="job in allJobs" is-open="job.open">\n\t    \t<accordion-heading>\n\t\t        <span ng-click="getJobExecutions(job)">{{job.name}}</span>\n\t\t    </accordion-heading>\n\t      <div class="row">\n\t\t      <div class="col-md-3">\n\t\t\t      <textarea rows="5" cols="50" id="{{job.name}}JobParameter" name="{{job.name}}JobParameter" \n\t\t\t\t\t\tplaceholder="RUNDATE={{currentDate | date:\'yyMMdd\'}},RUNHOUR={{currentDate | date:\'HHmmss\'}}" \n\t\t\t\t\t\tng-required="true" ng-model="jobSubmissionParameter"></textarea>\n\t\t\t      <p class="pull-left">\n\t\t\t      \t<button type="button" class="btn btn-primary" ng-click="start(job.name, jobSubmissionParameter)">Start</button>\n\t\t\t      \t<button type="button" class="btn btn-default" ng-click="jobSubmissionParameter = \'\'">Reset</button>\n\t\t\t      </p>\n\t\t\t      <span class="pull-right"><button type="button" class="btn btn-secondary" ng-click="refreshJobExecutions(job.name)">Refresh</button></span>\n\t\t      </div>\n\t\t      <div class="col-md-9">\n\t\t\t      <accordion id="jobExecutionsAccordian">\n\t\t    \t\t<accordion-group ng-repeat="jobExecution in jobExecutions | orderBy:\'-executionId\'" is-open="jobExecution.open">\n\t\t    \t\t\t<accordion-heading>\n\t\t\t\t\t        <span ng-click="getJobExecution(jobExecution)">{{jobExecution.status}}: {{jobExecution.startTime | date: \'MM-dd-yyyy HH:mm:ss.sss\'}}</span>  \n\t\t\t\t\t    </accordion-heading>\n\t\t\t\t\t    \n\t\t\t    \t  \t<table id="jobInfo-table" class="table table-bordered">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr bgcolor="lightgray">\n\t\t\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t                <th>Name</th>\n\t\t\t\t\t                <th>Status</th>\n\t\t\t\t\t                <th>Start Time</th>\n\t\t\t\t\t                <th>End Time</th>\n\t\t\t\t\t                <th>Total Time</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr bgcolor="lightblue">\n\t\t\t\t\t\t\t\t\t<td width="12%">\n\t\t\t\t\t\t\t\t\t\t<div class="btn-group" uib-dropdown>\n\t\t\t\t\t\t\t\t\t      <button id="split-button" type="button" class="btn btn-primary">Job</button>\n\t\t\t\t\t\t\t\t\t      <button type="button" class="btn btn-primary" dropdown-toggle>\n\t\t\t\t\t\t\t\t\t        <span class="caret"></span>\n\t\t\t\t\t\t\t\t\t      </button>\n\t\t\t\t\t\t\t\t\t      <ul class="dropdown-menu" role="menu" aria-labelledby="split-button">\n\t\t\t\t\t\t\t\t\t        <li ng-if="jobExecutionById.status == \'STARTED\' || jobExecutionById.status == \'STARTING\'" role="menuitem"><a ng-click="stop(jobExecutionById.executionId)">Stop</a></li>\n\t\t\t\t\t\t\t\t\t        <li ng-if="jobExecutionById.status == \'FAILED\' || jobExecutionById.status == \'STOPPED\'"role="menuitem"><a ng-click="restart(jobExecutionById.executionId)">Restart</a></li>\n\t\t\t\t\t\t\t\t\t        <li ng-if="jobExecutionById.status != \'COMPLETED\' && jobExecutionById.status != \'STARTED\' && jobExecutionById.status != \'STARTING\'" role="menuitem"><a ng-click="abandon(jobExecutionById.executionId)">Abandon</a></li>\n\t\t\t\t\t\t\t\t\t      </ul>\n\t\t\t\t\t\t\t\t\t    </div>\n\t\t    \t\t\t\t\t\t</td>\n\t\t\t\t\t                <td>{{job.name}}</td>\n\t\t\t\t\t                <td popover-title="Stacktrace" popover-placement="bottom" popover-trigger="mouseenter" popover="{{jobExecutionById.stackTrace}}" popover-append-to-body="true" ng-style="jobExecutionById.status === \'COMPLETED\' && {\'background-color\': \'lightgreen\'} || jobExecutionById.status === \'FAILED\' && {\'background-color\': \'red\'}">{{jobExecutionById.status}}</td>\n\t\t\t\t\t                <td>{{jobExecutionById.startTime | date: \'MM-dd-yyyy HH:mm:ss.sss\'}}</td>\n\t\t\t\t\t                <td>{{jobExecutionById.endTime | date: \'MM-dd-yyyy HH:mm:ss.sss\'}}</td>\n\t\t\t\t\t                <td>{{jobExecutionById.executionTime}}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr ng-repeat="stepExecution in jobExecutionById.steps">\n\t\t\t\t\t\t\t\t\t<td>Step</td>\n\t\t\t\t\t                <td popover-title="Counts" popover-placement="left" popover-trigger="mouseenter" popover="{{stepExecution.count}}" popover-append-to-body="true">{{stepExecution.name}}</td>\n\t\t\t\t\t                <td ng-style="stepExecution.status === \'COMPLETED\' && {\'background-color\': \'lightgreen\'} || stepExecution.status === \'FAILED\' && {\'background-color\': \'red\'}">{{stepExecution.status}}</td>\n\t\t\t\t\t                <td>{{stepExecution.startTime | date: \'MM-dd-yyyy HH:mm:ss.sss\'}}</td>\n\t\t\t\t\t                <td>{{stepExecution.endTime | date: \'MM-dd-yyyy HH:mm:ss.sss\'}}</td>\n\t\t\t\t\t                <td>{{stepExecution.executionTime}}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t<tfoot>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colspan="6">{{jobExecutionById.parameters.substring(0,250)}}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tfoot>\n\t\t\t\t\t\t</table>\n\t\t    \t  \t</accordion-group>\t\n\t\t\t      </accordion>\n\t\t      </div>\n\t      </div>\n\t    </accordion-group>\n\t</accordion>\n'),t.put("components/common/views/app-header.tmpl.html",'<div role="navigation" class="navbar navbar-fixed-top navbar-default">\r\n    <div class="navbar-header">\r\n\t\t<div class="navbar-brand">\r\n            {{name}} | IT Support Console\r\n\t\t</div>\r\n    </div>\r\n</div>'),t.put("components/common/views/app-navbar.tmpl.html",'<div class="navbar-inverse app-nav" role="navigation">\r\n\t<div class="container">\r\n\t\t<div collapse="isCollapsed" class="collapse navbar-collapse navbar-collapse-2">\r\n\t  \t\t<ul class="nav navbar-nav" ng-transclude>\r\n\t  \t\t</ul>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n'),t.put("components/name-value-filter-table.tmpl.html",'<div class="well container" ng-show="nameValues">\n\t\n\t<div id="nameValues-panel" class="panel details-view-wrapper">\n\t\t<h1 class="panel-header"><strong>{{panelHeader}}</strong></h1>\n\t\t<div class="row">\n\t\t\t<div class="col-md-5">\n\t\t\t\t<div id="nameValuesFilter" class="input-group">\n\t\t\t\t\t<input type="text" ng-model="search" class="form-control"\n\t\t\t\t\t\tplaceholder="Filter" autofocus> <span style="top: 0px"\n\t\t\t\t\t\tclass="input-group-addon glyphicon glyphicon-filter"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t\t<div id="nameValues-content-panel" class="panel-content clearfix">\n\t\n\t\t\t<div class="table-view-port">\n\t\t\t\t<table id="nameValues-table" ng-table="tableParams" class="table table-hover table-bordered table-condensed">\n\t\t\t\t\t<tr ng-repeat="nv in nameValues | filter:search" >\n\t\t\t\t\t\t<td data-title="nameHeader" sortable="\'key\'" width="30%" popover-animation="true" popover-placement="bottom" popover="{{nv.info}}" popover-append-to-body="true"><span class="pull-left">{{nv.key}}</span></td>\n\t\t\t\t\t\t<td data-title="valueHeader" sortable="\'value\'" popover-animation="true" popover-placement="bottom" popover="{{nv.message}}" popover-append-to-body="true" ng-style="nv.value === \'GOOD\' && {\'background-color\': \'lightgreen\'} || nv.value === \'BAD\' && {\'background-color\': \'red\'}"><span\n\t\t\t\t\t\t\tclass="pull-left">{{nv.value}}</span></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n'),t.put("components/menu.tmpl.html",'<!-- Define menu items here -->\n\n<div app-navbar class="shadow">\n    <li ng-class="{ active: isActive(\'#/server\')}"><a ui-sref="server">Server Info</a></li>\n    <li><a ui-sref="healthcheck">Health Check</a> </li>\n    <li class="dropdown">\n    \t<a class="dropdown-toggle" data-toggle="dropdown">Properties<span class="caret"></span></a>\n    \t<ul class="dropdown-menu">\n    \t\t<li ng-class="{ active: isActive(\'#/sysprops\')}"><a ui-sref="sysprops">Server Properties</a></li>\n    \t\t<li ng-class="{ active: isActive(\'#/config\')}"><a ui-sref="config">Database-driven Properties</a></li>\n    \t</ul>\n    </li>\n    <li class="dropdown">\n    \t<a class="dropdown-toggle" data-toggle="dropdown">Manage<span class="caret"></span></a>\n    \t<ul class="dropdown-menu">\n    \t\t<li ng-class="{ active: isActive(\'#/logging\')}"><a ui-sref="logging">Logging</a></li>\n    \t\t<li ng-class="{ active: isActive(\'#/caching\')}"><a ui-sref="caching">Cache</a></li>\n    \t\t<li ng-class="{ active: isActive(\'#/camel-jms\')}"><a ui-sref="camel-jms">Camel JMS Consumer</a></li>\n    \t\t<li ng-class="{ active: isActive(\'#/spring-jms\')}"><a ui-sref="spring-jms">Spring JMS Consumer</a></li>\n    \t</ul>\n    </li>\n    <li><a href="hawtio/index.html" target="_blank">Hawtio</a></li>\n    <li><a ui-sref="springBatch">Spring Batch</a> </li>\n</div>')}]),angular.module("healthcheck",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("healthcheck",{url:"/healthcheck",templateUrl:"template/name-value-filter-table.tmpl.html",controller:"HealthCheckController"})}]).controller("HealthCheckController",["$scope","$http","alertService","NgTableParams","$filter",function(t,e,n,a,o){n.closeAll(),t.panelHeader="Resource Health Check",t.nameHeader="Resource",t.valueHeader="Status/Value",t.nameValuesData=[],t.nameValues=[],t.reset=function(){t.nameValues=[],t.nameValuesData=[]},t.tableParams=new a({page:1,count:500,sorting:{key:"asc"}},{counts:[],getData:function(e,n){var a=t.nameValuesData;a&&(a=n.filter()?o("filter")(a,n.filter()):a,a=n.sorting()?o("orderBy")(a,n.orderBy()):a,n.total(a.length),t.nameValues=a.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.nameValues))}}),t.getNameValues=function(){t.reset(),e.get("secure/healthcheck").success(function(e){null==e||""==e?n.clearAndAdd("info","Resources not defined"):(t.nameValuesData=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload()))}).error(function(){n.clearAndAdd("warning","Health check run failed.")})},t.getNameValues()}]),angular.module("server",["ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("server",{url:"/server",templateUrl:"template/name-value-filter-table.tmpl.html",controller:"ServerInfoController"})}]).controller("ServerInfoController",["$scope","$http","NgTableParams","alertService","$filter",function(t,e,n,a,o){a.closeAll(),t.panelHeader="Server Info",t.nameHeader="Name",t.valueHeader="Value",t.nameValuesData=[],t.nameValues=[],t.reset=function(){t.nameValues=[],t.nameValuesData=[]},t.tableParams=new n({page:1,count:500,sorting:{key:"asc"}},{counts:[],getData:function(e,n){var a=t.nameValuesData;a&&(a=n.filter()?o("filter")(a,n.filter()):a,a=n.sorting()?o("orderBy")(a,n.orderBy()):a,n.total(a.length),t.nameValues=a.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.nameValues))}}),t.getNameValues=function(){t.reset(),e.get("secure/server").success(function(e){t.nameValuesData=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload())}).error(function(){a.clearAndAdd("warning","Server information unavailable.")})},t.getNameValues()}]),angular.module("sysprops",[]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("sysprops",{url:"/sysprops",templateUrl:"template/name-value-filter-table.tmpl.html",controller:"SystemPropertiesController"})}]).controller("SystemPropertiesController",["$scope","$http","alertService","NgTableParams","$filter",function(t,e,n,a,o){n.closeAll(),t.panelHeader="System Properties",t.nameHeader="Name",t.valueHeader="Value",t.nameValuesData=[],t.nameValues=[],t.reset=function(){t.nameValues=[],t.nameValuesData=[]},t.tableParams=new a({page:1,count:500,sorting:{key:"asc"}},{counts:[],getData:function(e,n){var a=t.nameValuesData;a&&(a=n.filter()?o("filter")(a,n.filter()):a,a=n.sorting()?o("orderBy")(a,n.orderBy()):a,n.total(a.length),t.nameValues=a.slice((n.page()-1)*n.count(),n.page()*n.count()),e.resolve(t.nameValues))}}),t.getNameValues=function(){t.reset(),e.get("secure/sysprops").success(function(e){t.nameValuesData=e,null!=t.tableParams&&void 0!=t.tableParams&&(t.tableParams.total(e.length),t.tableParams.reload())}).error(function(){n.clearAndAdd("warning","System properties unavailable.")})},t.getNameValues()}]);